
import React, { useEffect, useRef, useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Result.module.css'
import { Skeleton } from "baseui/skeleton";
import { ThemeProvider, LightTheme, DarkTheme } from 'baseui';
import { Button, SIZE, SHAPE } from 'baseui/button';
import ArrowIcon from '../src/assets/icons/ArrowIcon.svg'
import RefreshIcon from '../src/assets/icons/reload-icon.svg'
import { useStyletron } from 'baseui';
import { useRouter } from 'next/router';
import { Display4 } from 'baseui/typography';
import { Quote } from '../src/components/Result/Quote';
import { Card } from '../src/components/Result/Card';
import { CardShadow } from '../src/components/Result/CardShadow';



const THEME = {
    light: 'light',
    dark: 'dark',
};


const OnlyOnceUseEffect = (callBack) => {
    const initLoad = useRef(false)

    useEffect(() => {
        if (initLoad.current) {
            callBack()
            initLoad.current = true
            console.log('Run Once');

        }
    });
}


export default function Home({ props }) {
    const [resturantsArray, setResturantsArray] = useState([]);

    console.log('Props', props);

    const [theme, setTheme] = React.useState(THEME.dark);
    const [css, themes] = useStyletron();
    // const [first, setfirst] = useState(second);

    const router = useRouter()
    const query = router.query

    const fetchData = async () => {
        const { price } = query

        const res = await fetch("/api/hello", {
            headers: { "Content-Type": "application/json; charset=utf-8" },
            method: 'POST',
            body: JSON.stringify({ query })
        })
        const data = await res.json()

        console.log("Data REsult", data);

        // filter Operation
        // const allWorking = data.results.filter(place => place.business_status === "OPERATIONAL")

        // Check for operational status
        const allWorkingRestaurants = data.filter(place => place.business_status === "OPERATIONAL")
        // filter the highest ranking
        const highestRatedRestaurants = allWorkingRestaurants.sort((a, b) => {
            if (a.rating > b.rating)
                return -1;
            if (a.rating < b.rating)
                return 1;
            return 0;
        })

        // Filter out resturant without Price level
        const restaurantsWithPriceLvL = highestRatedRestaurants.filter(place => place.hasOwnProperty("price_level"))

        console.log("Before one pig", restaurantsWithPriceLvL);



        // price_level ==>   0 free , 1 Inexpensive, 2 Moderate,  3 Expensive , 4 Very Expensive


        // check if user has price range & sort in order



        restaurantsWithPriceLvL.sort((a, b) => {
            if (a.price_level > b.price_level)
                return -1;
            if (a.price_level < b.price_level)
                return 1;
            return 0;
        })


        // One Pig Star
        const onePigRestaurants = restaurantsWithPriceLvL.filter(foodPrice => foodPrice.price_level <= 2)

        //  Two Pig Start
        const twoPigRestaurants = restaurantsWithPriceLvL.filter(foodPrice => foodPrice.price_level === 3)// || foodPrice.price_level >= 2


        //  Three Pig Start
        const threePigRestaurants = restaurantsWithPriceLvL.filter(foodPrice => foodPrice.price_level >= 3)
        console.log("three", threePigRestaurants);




        switch (price) {
            case 0:

                return setResturantsArray(onePigRestaurants)


                break;
            case 1:
                return setResturantsArray(twoPigRestaurants)

            case 2:
                return setResturantsArray(threePigRestaurants)
            default:
                return setResturantsArray(onePigRestaurants)
                break;
        }


    }


    // OnlyOnceUseEffect(() => {
    //     fetchData()
    // })






    useEffect(() => {
        const { area, lat, lon, price } = query
        console.log('Area', area);
        console.log('Lan', lat);
        console.log('Lon', lon);
        console.log('Price', price);

        // console.log('Init Result', query);
        // Fetch Data and set Result

        fetchData()

    }, [])






    return (
        <div
            className={css({
                display: "flex",
                flexDirection: "column",
                // justifyContent:"space-between",
                minHeight: "100vh",
                paddingLeft: "5%",

            })}
        >
            <Head>
                <title>Results</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <ThemeProvider theme={theme === THEME.light ? LightTheme : DarkTheme}>

                <Quote themes={themes} />

                {/* <CardShadow  themes={themes}/> */}

                <main
                    className={css({
                        display: 'flex',
                        flexDirection: "column",
                        justifyContent: 'space-between',
                        alignItems: "center",
                        color: themes.colors.primaryB
                    })}>

                    <Card themes={themes} />

                    <div
                        className={css({
                            display: 'flex',
                            // flexDirection: "column",
                            justifyContent: 'center',
                            maxWidth: '528px',
                            marginTop: themes.sizing.scale800,
                            color: themes.colors.primaryB
                        })}>

                        <Button shape={SHAPE.circle}>
                            <Image src={RefreshIcon} alt="Generate Icon" />
                        </Button>
                    </div>

                    <div
                        className={css({
                            display: 'flex',
                            justifyContent: 'center',
                            marginTop: themes.sizing.scale1000,
                            color: themes.colors.primaryB
                        })}>

                        <Button
                            size={SIZE.large}
                            $style={{ width: "350px", textAlign: "center" }}>
                            Take me there
                            {'\u00A0'}
                            {'\u00A0'}
                            {'\u00A0'}
                            <Image src={ArrowIcon} alt="Arrow Icon Pin" />
                        </Button>
                    </div>

                    <div
                        className={css({
                            display: 'flex',
                            justifyContent: 'space-evenly',
                            alignItems: "center",
                            marginTop: themes.sizing.scale1600,
                            color: themes.colors.primaryB,
                            maxWidth: "500px",
                        })}>

                        <Button
                            size={SIZE.large}
                            $style={{ width: "70px", margin: "10px", textAlign: "center" }}
                        >
                            <Display4 color={themes.colors.accent700}>
                                1
                            </Display4>
                        </Button>

                        <Button
                            size={SIZE.large}
                            $style={{ width: "70px", margin: "10px", textAlign: "center" }}>

                            <Display4 color={themes.colors.accent700}>
                                2
                            </Display4>
                        </Button>

                        <Button

                            size={SIZE.large}
                            $style={{ width: "70px", margin: "10px", textAlign: "center" }}>

                            <Display4 color={themes.colors.accent700}>
                                3
                            </Display4>
                        </Button>

                    </div>

                </main>
            </ThemeProvider >


        </div >
    )
}


// export async function getServerSideProps() {
//   // Fetch data from external API
//   const res = await fetch("http://localhost:3000/api/hello")
//   const data = await res.json()

//   // Pass data to the page via props
//   return { props: { data } }
// }

